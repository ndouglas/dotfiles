---
- name: 'Gather host facts.'
  ansible.builtin.include: 'set_host_facts.yaml'

- name: 'Create and start the container.'
  delegate_to: "{{ pve_node }}"
  become: yes
  block:

  - name: 'Download template if it does not already exist.'
    community.general.proxmox_template:
      node: "{{ pve_node }}"
      api_user: "{{ proxmox.pve_api_username }}"
      api_password: "{{ proxmox.pve_api_password }}"
      api_host: "{{ pve_node }}"
      storage: 'local'
      content_type: 'vztmpl'
      template: "{{ pve_ostemplate | default(proxmox.pve_ostemplate) }}"

  - name: 'Ensure mountpoints exist on host.'
    ansible.builtin.file:
      path: "{{ item.host_path }}"
      state: 'directory'
      mode: "{{ item.host_perms | default('0755') }}"
      owner: "{{ item.host_owner | default('1000') }}"
      group: "{{ item.host_group | default('1000') }}"
    loop: "{{ pve_mounts }}"

  - name: 'Build mounts.'
    ansible.builtin.set_fact:
      pve_mounts_dict: "{{ pve_mounts_dict | default({}) | combine({ 'mp' + index | string : item.host_path + ',mp=' + item.guest_path }) }}"
    loop_control:
      index_var: 'index'
    loop: "{{ pve_mounts | default([]) }}"

  - name: 'Create container.'
    community.general.proxmox:
      vmid: "{{ pve_vm_id }}"
      node: "{{ pve_node }}"
      cores: "{{ pve_cores | default(4) }}"
      cpus: "{{ pve_cpus | default(1) }}"
      memory: "{{ pve_memory_size | default(16384) }}"
      swap: "{{ pve_swap_size | default(0) }}"
      api_user: "{{ proxmox.pve_api_username }}"
      api_password: "{{ proxmox.pve_api_password }}"
      api_host: "{{ pve_node }}"
      password: "{{ password }}"
      hostname: "{{ inventory_hostname }}"
      mounts: "{{ pve_mounts_dict | default({}) | to_json }}"
      onboot: "{{ pve_onboot | default('yes') }}"
      ostemplate: "local:vztmpl/{{ pve_ostemplate | default(proxmox.pve_ostemplate) }}"
      description: "{{ inventory_hostname }}"
      netif: '{"net0":"type=veth,name=eth0,ip=dhcp,bridge=vmbr0,firewall=1,hwaddr={{ pve_mac_address }}"}'
      unprivileged: "{{ pve_unprivileged | default('no') }}"
      disk: "local-lvm:{{ pve_rootfs_size | default('16') }}"
      features: 'mount=nfs,keyctl=1,nesting=1'
      state: 'present'
      storage: 'local'
      pubkey: "{{ proxmox.pve_ssh_pub_key }}"
      proxmox_default_behavior: 'no_defaults'

  - name: 'Append additional options to VM configuration.'
    ansible.builtin.blockinfile:
      path: "/etc/pve/lxc/{{ pve_vm_id }}.conf"
      block: |
        lxc.apparmor.profile: unconfined
        lxc.apparmor.raw: mount,
        lxc.cap.drop:
        lxc.cgroup.devices.allow: a
        lxc.mount.auto: proc:rw sys:rw
        lxc.mount.entry: /dev/kmsg dev/kmsg none defaults,bind,create=file
      unsafe_writes: yes

  - name: 'Start container.'
    community.general.proxmox:
      vmid: "{{ pve_vm_id }}"
      api_user: "{{ proxmox.pve_api_username }}"
      api_password: "{{ proxmox.pve_api_password }}"
      api_host: "{{ pve_node }}"
      state: 'started'
      proxmox_default_behavior: 'no_defaults'
