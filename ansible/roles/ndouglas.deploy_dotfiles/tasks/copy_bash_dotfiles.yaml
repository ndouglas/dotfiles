---

- name: 'Set user and group.'
  ansible.builtin.include: 'set_dotfiles_user.yaml'
  when: 'user is not defined'

- name: 'Set dotfiles_home directory.'
  ansible.builtin.include: 'set_dotfiles_home_directory.yaml'
  when: 'dotfiles_home is not defined'

- name: "Create temporary directory."
  ansible.builtin.tempfile:
    state: 'directory'
  register: 'temporary_directory'

- name: "Copy Bash static dotfiles {{ source }} -> temporary directory."
  ansible.builtin.assemble:
    src: "{{ source }}"
    dest: "{{ temporary_directory.path }}/_{{ id }}.sh"
    regexp: ".*\\.sh$"

- name: 'Find template files in path.'
  ansible.builtin.find:
    paths: "{{ source }}"
    patterns: "*.2"
  register: 'template_files'
  changed_when: no

- name: "Copy Bash template dotfiles {{ source }} -> temporary directory."
  ansible.builtin.template:
    src: "{{ item.path }}"
    dest: "{{ temporary_directory.path }}/{{ item.path | basename | splitext | first }}"
  with_items: "{{ template_files.files }}"

- name: "Remove Bash dotfiles directory {{ dest }}."
  ansible.builtin.file:
    path: "{{ dest }}"
    force: yes
    state: absent

- name: "Create Bash dotfiles directory {{ dest }}."
  ansible.builtin.file:
    path: "{{ dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: '0700'
    force: yes
    state: 'directory'

- name: "Copy Bash dotfiles temporary directory -> {{ dest }}."
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: '0600'
    force: yes
  with_fileglob:
    - "{{ temporary_directory.path }}/*.sh"
