---

###############################################################################
# A FACT-FINDING MISSION
###############################################################################

- name: 'Set some lists of Bash dotfile directories.'
  ansible.builtin.set_fact:
    bash_generic_items:
      - 'ansible'
      - 'dotfiles'
      - 'ffmpeg'
      - 'filebot'
      - 'hass'
      - 'kasa'
      - 'proxmox'
      - 'r53'
      - 'reddit'
      - 'torrents'
    bash_special_items:
      - 'options'
      - 'path'
      - 'env'
      - 'library'
      - 'completion'
      - 'aliases'

- name: 'Set dotfiles facts.'
  ansible.builtin.set_fact:
    bash_ordered_segments: 'options path env library {{ bash_generic_items | join(" ") }} beets comics pi host completion aliases'

- name: 'Set user and group.'
  ansible.builtin.include: 'set_dotfiles_user.yaml'
  when: 'user is not defined'

###############################################################################
# GENERIC & SPECIAL UNIVERSAL ITEMS
###############################################################################

- name: 'Copy Bash generic and special dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: "{{ dotfile_id }}"
    source: "{{ role_path }}/files/bash/{{ dotfile_id }}"
    dest: "{{ ansible_env.HOME }}/.bash.{{ dotfile_id }}.d"
  with_items: "{{ bash_generic_items + bash_special_items }}"
  loop_control:
    loop_var: 'dotfile_id'

###############################################################################
# ALIASES
###############################################################################

- name: 'Set Mac-Specific Aliases'
  block:

    - name: 'Create aliases for various BSD tools to the GNU equivalents.'
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.bash.aliases.d/{{ item }}.sh"
        content: |
          #!/usr/bin/env bash

          # Detect if we have a g{{ item }}.
          if [ -x "$(command -v g{{ item }})" ]; then
            alias {{ item }}="g{{ item }}";
          fi
      loop:
        - 'date'
        - 'du'
        - 'echo'
        - 'sed'
        - 'stat'
      changed_when: no


    - name: 'Create alias for md5sum.'
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.bash.aliases.d/md5sum.sh"
        content: |
          #!/usr/bin/env bash

          alias md5sum="md5";
      changed_when: no

  when: 'host_is_mac'

###############################################################################
# BEETS
###############################################################################

- name: 'Copy Bash Beets dotfiles to destination.'
  block:

    - name: 'Copy Bash Beets dotfiles to destination.'
      ansible.builtin.include: 'copy_bash_dotfiles.yaml'
      vars:
        id: 'beets'
        source: "{{ role_path }}/files/bash/beets"
        dest: "{{ ansible_env.HOME }}/.bash.beets.d"

    - name: 'Set BEETSDIR environment variable.'
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.bash.env.d/beetsdir.sh"
        content: |
          #!/usr/bin/env bash

          export BEETSDIR="/volume1/Music/beets";

  when: "hostname == 'fenn' or hostname == 'harlton'"

###############################################################################
# COMICS
###############################################################################

- name: 'Copy Bash Comics dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'comics'
    source: "{{ role_path }}/files/bash/comics"
    dest: "{{ ansible_env.HOME }}/.bash.comics.d"
  when: "host_is_synology and hostname == 'dayne'"

###############################################################################
# HOST
###############################################################################

- name: 'Check for existence of Host dotfiles source.'
  ansible.builtin.stat:
    path: "{{ role_path }}/files/bash/host/{{ hostname }}"
  register: host_dotfiles_path

- name: 'Copy Bash Host-specific dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'host'
    source: "{{ role_path }}/files/bash/host/{{ hostname }}"
    dest: "{{ ansible_env.HOME }}/.bash.host.d"
  when: 'host_dotfiles_path.stat.exists'

###############################################################################
# PATH
###############################################################################

- name: 'Copy Bash path dotfiles to destination.'
  block:

    - name: 'Syno-CLI Path Components'
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.bash.path.d/syno-cli.sh"
        content: |
         #!/usr/bin/env bash

          # Syno-CLI provides nano, tput, etc.
          if [ -d "/volume1/@appstore/synocli-file/bin" ]; then
            PATH="${PATH}:/volume1/@appstore/synocli-file/bin";
          fi
      when: 'host_is_synology'

###############################################################################
# RASPBERRY PI
###############################################################################

- name: 'Copy Bash Raspberry Pi dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'pi'
    source: "{{ role_path }}/files/bash/pi"
    dest: "{{ ansible_env.HOME }}/.bash.pi.d"
  when: 'host_is_raspbian'

###############################################################################
# CORE
###############################################################################

- name: 'Copy Bash core dotfiles to destination.'
  ansible.builtin.template:
    backup: yes
    force: yes
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: '0755'
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/.{{ item | basename | regex_replace('^([^\\.]*).*', '\\1') }}"
  with_fileglob:
    - "{{ role_path }}/files/bash/core/*.sh.j2"
