---

###############################################################################
# A FACT-FINDING MISSION
###############################################################################

- name: 'Detect Synology.'
  stat:
    path: /etc/synoinfo.conf
  register: synology_info_file
  when: '(ansible_distribution == "OtherLinux")'

- name: 'Detect Proxmox VE.'
  stat:
    path: /etc/pve
  register: proxmox_pve_directory
  when: '(ansible_distribution == "Debian")'

- name: 'Set dotfiles facts.'
  ansible.builtin.set_fact:
    host_is_debian: "{{ ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' }}"
    host_is_mac: "{{ ansible_distribution == 'MacOSX' }}"
    host_is_proxmox: "{{ ansible_distribution == 'Debian' and proxmox_pve_directory.stat.exists }}"
    host_is_synology: "{{ ansible_distribution == 'OtherLinux' and synology_info_file.stat.exists }}"
    bash_ordered_segments: 'options path env library ansible beets comics kasa proxmox r53 aliases'

- name: 'Set user and group.'
  ansible.builtin.include: 'set_dotfiles_user.yaml'
  when: 'user is not defined'

- name: 'Set dotfiles_home directory.'
  ansible.builtin.include: 'set_dotfiles_home_directory.yaml'
  when: 'dotfiles_home is not defined'

###############################################################################
# ALIASES
###############################################################################

- name: 'Copy Bash aliases dotfiles to destination.'
  block:

    - name: 'Copy Bash Aliases dotfiles to destination.'
      ansible.builtin.include: 'copy_bash_dotfiles.yaml'
      vars:
        id: 'aliases'
        source: "{{ role_path }}/files/bash/aliases"
        dest: "{{ dotfiles_home }}/.bash.aliases.d"

    - name: 'Set Mac-Specific Aliases'
      block:

        - name: 'Create aliases for various BSD tools to the GNU equivalents.'
          ansible.builtin.copy:
            dest: "{{ dotfiles_home }}/.bash.aliases.d/{{ item }}.sh"
            content: |
              #!/usr/bin/env bash

              # Detect if we have a g{{ item }}.
              if [ -x "$(command -v g{{ item }})" ]; then
                alias {{ item }}="g{{ item }}";
              fi
          loop:
            - 'date'
            - 'du'
            - 'echo'
            - 'sed'
            - 'stat'

        - name: 'Create alias for md5sum.'
          ansible.builtin.copy:
            dest: "{{ dotfiles_home }}/.bash.aliases.d/md5sum.sh"
            content: |
              #!/usr/bin/env bash

              alias md5sum="md5";

      when: 'host_is_mac'

###############################################################################
# ANSIBLE
###############################################################################

- name: 'Copy Bash Ansible dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'ansible'
    source: "{{ role_path }}/files/bash/ansible"
    dest: "{{ dotfiles_home }}/.bash.ansible.d"

###############################################################################
# BEETS
###############################################################################

- name: 'Copy Bash Beets dotfiles to destination.'
  block:

    - name: 'Copy Bash Beets dotfiles to destination.'
      ansible.builtin.include: 'copy_bash_dotfiles.yaml'
      vars:
        id: 'beets'
        source: "{{ role_path }}/files/bash/beets"
        dest: "{{ dotfiles_home }}/.bash.beets.d"

    - name: 'Set BEETSDIR environment variable.'
      ansible.builtin.copy:
        dest: "{{ dotfiles_home }}/.bash.env.d/beetsdir.sh"
        content: |
          #!/usr/bin/env bash

          export BEETSDIR="/volume1/Music/beets";

  when: "{{ host_is_synology }}"

###############################################################################
# COMICS
###############################################################################

- name: 'Copy Bash Comics dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'comics'
    source: "{{ role_path }}/files/bash/comics"
    dest: "{{ dotfiles_home }}/.bash.comics.d"
  when: "{{ host_is_synology and ansible_hostname == 'dayne' }}"

###############################################################################
# KASA
###############################################################################

- name: 'Copy Bash Kasa dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'kasa'
    source: "{{ role_path }}/files/bash/kasa"
    dest: "{{ dotfiles_home }}/.bash.kasa.d"

###############################################################################
# LIBRARY
###############################################################################

- name: 'Copy Bash Library dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'library'
    source: "{{ role_path }}/files/bash/library"
    dest: "{{ dotfiles_home }}/.bash.library.d"

###############################################################################
# ENVIRONMENT
###############################################################################

- name: 'Copy Bash Env dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'env'
    source: "{{ role_path }}/files/bash/env"
    dest: "{{ dotfiles_home }}/.bash.env.d"

###############################################################################
# OPTIONS
###############################################################################

- name: 'Copy Bash Options dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'options'
    source: "{{ role_path }}/files/bash/options"
    dest: "{{ dotfiles_home }}/.bash.options.d"

###############################################################################
# PATH
###############################################################################

- name: 'Copy Bash path dotfiles to destination.'
  block:

    - name: 'Copy Bash Path dotfiles to destination.'
      ansible.builtin.include: 'copy_bash_dotfiles.yaml'
      vars:
        id: 'path'
        source: "{{ role_path }}/files/bash/path"
        dest: "{{ dotfiles_home }}/.bash.path.d"

    - name: 'Syno-CLI Path Components'
      ansible.builtin.copy:
        dest: "{{ bash_path_path }}/syno-cli.sh"
        content: |
         #!/usr/bin/env bash

          # Syno-CLI provides nano, tput, etc.
          if [ -d "/volume1/@appstore/synocli-file/bin" ]; then
            PATH="${PATH}:/volume1/@appstore/synocli-file/bin";
          fi
      when: 'host_is_synology'

###############################################################################
# PROXMOX
###############################################################################

- name: 'Copy Bash Proxmox dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'proxmox'
    source: "{{ role_path }}/files/bash/proxmox"
    dest: "{{ dotfiles_home }}/.bash.proxmox.d"

###############################################################################
# ROUTE 53
###############################################################################

- name: 'Copy Bash Route 53 dotfiles to destination.'
  ansible.builtin.include: 'copy_bash_dotfiles.yaml'
  vars:
    id: 'r53'
    source: "{{ role_path }}/files/bash/r53"
    dest: "{{ dotfiles_home }}/.bash.r53.d"

###############################################################################
# CORE
###############################################################################

- name: 'Copy Bash core dotfiles to destination.'
  block:

    - name: 'Create .bash_common file.'
      ansible.builtin.template:
        backup: yes
        force: yes
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0755'
        dest: "{{ dotfiles_home }}/.bash_common"
        src: "{{ role_path }}/files/bash/bash_common.sh.j2"

    - name: 'Create .bash_logout file.'
      ansible.builtin.template:
        backup: yes
        force: yes
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0755'
        dest: "{{ dotfiles_home }}/.bash_logout"
        src: "{{ role_path }}/files/bash/bash_logout.sh.j2"

    - name: 'Create .bash_prompt file.'
      ansible.builtin.template:
        backup: yes
        force: yes
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0755'
        dest: "{{ dotfiles_home }}/.bash_prompt"
        src: "{{ role_path }}/files/bash/bash_prompt.sh.j2"

    - name: 'Create .bash_prompt_local file.'
      ansible.builtin.template:
        backup: yes
        force: no
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0755'
        dest: "{{ dotfiles_home }}/.bash_prompt_local"
        src: "{{ role_path }}/files/bash/bash_prompt_local.sh.j2"
      vars:
        prompt_hostname: "{{ ansible_hostname | lower }}"

    - name: 'Create .bash_profile file.'
      ansible.builtin.template:
        backup: yes
        force: yes
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0755'
        dest: "{{ dotfiles_home }}/.bash_profile"
        src: "{{ role_path }}/files/bash/bash_profile.sh.j2"

    - name: 'Create .bashrc file.'
      ansible.builtin.template:
        backup: yes
        force: yes
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0755'
        dest: "{{ dotfiles_home }}/.bashrc"
        src: "{{ role_path }}/files/bash/bashrc.sh.j2"
