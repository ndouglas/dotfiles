---
- name: 'Install Apk packages.'
  become: yes
  ansible.builtin.apk:
    name:
      - 'bc'
      - 'curl'
      - 'git'
      - 'jq'
      - 'openssl-dev'
      - 'python3'
      - 'py3-pip'
      - 'rsync'
      - 'ssmtp'
    update_cache: yes
  when: 'host_uses_apk'

- name: 'Allow release-info to change for APT repositories.'
  become: yes
  ansible.builtin.command: 'apt-get update -y --allow-releaseinfo-change'
  args:
    warn: no
  when: 'host_uses_apt'

- name: 'Install Apt packages.'
  become: yes
  ansible.builtin.apt:
    name:
      - 'apt-file'
      - 'bc'
      - 'build-essential'
      - 'cargo'
      - 'curl'
      - 'ffmpeg'
      - 'git'
      - 'jq'
      - 'libacl1-dev'
      - 'libffi-dev'
      - 'libssl-dev'
      - 'mailutils'
      - 'python3'
      - 'python3-apt'
      - 'python3-dev'
      - 'python3-pip'
      - 'python3-venv'
      - 'rsync'
      - 'sshpass'
    update_cache: yes
  when: 'host_uses_apt'

- name: 'Install Homebrew packages.'
  community.general.homebrew:
    name:
      - 'bat'
      - 'coreutils'
      - 'findutils'
      - 'ffmpeg'
      - 'fzf'
      - 'gawk'
      - 'gnu-indent'
      - 'gnu-sed'
      - 'gnutls'
      - 'grep'
      - 'gnu-tar'
      - 'jq'
      - 'parallel'
      - "python@{{ software_versions.python }}"
      - 'sshpass'
      - 'yq'
    update_homebrew: no
  when: 'host_uses_homebrew'

- name: 'Make sure pip is at the latest version.'
  ansible.builtin.pip:
    name: 'pip'
    state: 'forcereinstall'
  changed_when: no

- name: 'Install Pip packages.'
  ansible.builtin.pip:
    name:
      - 'ansible'
      - 'awscli'
      - 'bdfr'
      - 'boto3'
      - 'proxmoxer'
      - 'requests'
      - 'torrent_parser'
      - 'virtualenv'

- name: 'Install non-Synology Pip packages.'
  ansible.builtin.pip:
    name:
      - 'borgbackup'
      - 'borgmatic'
  when: 'not host_is_synology'

