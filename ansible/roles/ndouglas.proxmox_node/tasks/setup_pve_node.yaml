---
- name: 'Set some important facts...'
  ansible.builtin.set_fact:
    ansible_connection: 'ssh'
    ansible_ssh_user: 'root'

- name: 'Enable kernel modules.'
  ansible.builtin.copy:
    content: "{{ item }}"
    dest: "/etc/modules-load.d/{{ item }}.conf"
  loop:
    - 'aufs'
    - 'br_netfilter'
    - 'overlay'

- name: 'Modify some settings to prepare for Kubernetes.'
  ansible.builtin.copy:
    dest: '/etc/sysctl.d/kubernetes.conf'
    content: |
      vm.swappiness=0
      net.ipv4.ip_forward=1

- name: 'Run all sysctl updates.'
  ansible.builtin.shell:
    cmd: 'sysctl --system'
  changed_when: no

- name: 'Disable swap if not already disabled.'
  ansible.builtin.shell:
    cmd: 'swapoff -a'
  changed_when: no

- name: 'Modprobe kernel modules.'
  community.general.modprobe:
    name: "{{ item }}"
  loop:
    - 'aufs'
    - 'br_netfilter'
    - 'overlay'

- name: 'Update system APT repositories.'
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
  loop:
    - 'deb http://ftp.us.debian.org/debian buster main contrib'
    - 'deb http://ftp.us.debian.org/debian buster-updates main contrib'
    - 'deb http://security.debian.org buster/updates main contrib'

- name: 'Disable Enterprise Proxmox package repository configuration.'
  ansible.builtin.file:
    path: '/etc/apt/sources.list.d/pve-enterprise.list'
    state: 'absent'

- name: 'Remove the enterprise Proxmox package repository configuration.'
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    filename: 'pve-enterprise'
    state: 'absent'
  loop:
    - 'deb https://enterprise.proxmox.com/debian buster pve-enterprise'
    - 'deb https://enterprise.proxmox.com/debian/pve buster pve-enterprise'

- name: 'Add the community Proxmox package repository configuration.'
  ansible.builtin.apt_repository:
    repo: 'deb http://download.proxmox.com/debian/pve buster pve-no-subscription'
    filename: 'pve-community'

- name: 'Disable the subscription banner.'
  ansible.builtin.replace:
    path: '/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js'
    regexp: "data.status !== 'Active'"
    replace: 'false'

- name: 'Restart PVE Proxy.'
  ansible.builtin.systemd:
    name: 'pveproxy'
    state: 'restarted'

- name: 'Define the docker-default AppArmor profile.'
  ansible.builtin.copy:
    dest: '/etc/apparmor.d/docker-default'
    content: |
      #include <tunables/global>

      profile docker-default flags=(attach_disconnected,mediate_deleted) {

        #include <abstractions/base>

        ptrace peer=@{profile_name},

        network,
        capability,
        file,
        umount,

        deny @{PROC}/* w,  # deny write for all files directly in /proc (not in a subdir)
        # deny write to files not in /proc/<number>/** or /proc/sys/**
        deny @{PROC}/{[^1-9],[^1-9][^0-9],[^1-9s][^0-9y][^0-9s],[^1-9][^0-9][^0-9][^0-9]*}/** w,
        deny @{PROC}/sys/[^k]** w,  # deny /proc/sys except /proc/sys/k* (effectively /proc/sys/kernel)
        deny @{PROC}/sys/kernel/{?,??,[^s][^h][^m]**} w,  # deny everything except shm* in /proc/sys/kernel/
        deny @{PROC}/sysrq-trigger rwklx,
        deny @{PROC}/kcore rwklx,
        deny @{PROC}/mem rwklx,
        deny @{PROC}/kmem rwklx,

        deny mount,

        deny /sys/[^f]*/** wklx,
        deny /sys/f[^s]*/** wklx,
        deny /sys/fs/[^c]*/** wklx,
        deny /sys/fs/c[^g]*/** wklx,
        deny /sys/fs/cg[^r]*/** wklx,
        deny /sys/firmware/** rwklx,
        deny /sys/kernel/security/** rwklx,
      }

- name: 'Restart AppArmor.'
  ansible.builtin.systemd:
    name: 'pveproxy'
    state: 'restarted'
