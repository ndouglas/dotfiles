---
- name: 'Set some important facts...'
  ansible.builtin.set_fact:
    torrents_root_path: '/torrents'
    user: "{{ my.name.lower }}"
    group: "{{ my.name.lower }}"

- name: 'Set some basic facts...'
  ansible.builtin.include_role:
    name: 'ndouglas.deploy_dotfiles'
    tasks_from: 'set_common_facts.yaml'

- name: 'Set some useful facts.'
  ansible.builtin.set_fact:
    instance_storage_path: "{{ torrents_root_path }}/{{ instance_id }}"
    transmission_peer_port: "{{ base_port + ( instance_id | int ) }}"
    service_name: "{{ padded_instance_id }}{{ instance_domain }}"

- name: 'Set the service FQDN.'
  ansible.builtin.set_fact:
    service_fqdn: "{{ service_name }}.{{ fqdns.private }}"

- name: 'Create instance root directory.'
  ansible.builtin.file:
    path: "{{ instance_storage_path }}"
    state: 'directory'
    mode: '0755'
    owner: "{{ user }}"
    group: "{{ group }}"

- name: 'Create symlink pointing to instance ID from domain.'
  ansible.builtin.file:
    path: "{{ torrents_root_path }}/{{ instance_domain }}"
    src: "{{ instance_storage_path }}"
    state: 'link'

- name: 'Create domain secondary destination path.'
  ansible.builtin.file:
    path: "{{ torrents_root_path }}/data/{{ instance_domain }}"
    state: 'directory'
    mode: '0755'
    owner: "{{ user }}"
    group: "{{ group }}"

- name: 'Prepare directory structure.'
  ansible.builtin.file:
    path: "{{ instance_storage_path }}/{{ item }}"
    state: 'directory'
    mode: '0755'
  loop:
    - "config"
    - "watch"
    - "incomplete"
    - "downloads"

- name: "Copy Transmission template files {{ role_path }}/files/config/ -> {{ instance_storage_path }}/config/."
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ instance_storage_path }}/config/{{ item | basename | splitext | first }}"
    mode: '0755'
  with_fileglob:
    - "{{ role_path }}/files/config/*.j2"

- name: 'Create the Docker container.'
  community.docker.docker_container:
    name: "{{ service_name }}"
    image: 'linuxserver/transmission'
    state: 'started'
    restart: yes
    devices:
     - "{{ instance_storage_path }}/config:/config:rwm"
     - "{{ instance_storage_path }}/watch:/watch:rwm"
     - "{{ instance_storage_path }}/downloads:/downloads:rwm"
     - "{{ torrents_root_path }}/data/{{ instance_domain }}:/downloads2:rwm"
    labels:
      "traefik.enable": true
      "traefik.http.routers.{{ service_name }}.rule": 'Host(`{{ service_fqdn }}`)'
      "traefik.http.routers.{{ service_name }}.entrypoints": 'websecure'
      "traefik.http.routers.{{ service_name }}.tls": true
      "traefik.http.routers.{{ service_name }}.tls.certresolver": 'hellholt'
      "traefik.http.routers.{{ service_name }}.service": "{{ service_name }}"
      "traefik.http.services.{{ service_name }}.loadbalancer.server.port": 9091
      "traefik.http.services.{{ service_name }}.loadbalancer.server.scheme": 'http'
    ports:
      - "9091:9091"
      - "{{ transmission_peer_port }}:{{ transmission_peer_port }}"
      - "{{ transmission_peer_port }}:{{ transmission_peer_port }}/udp"
    memory: '1G'
    env:
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      TZ: "America/New_York"
    restart_policy: 'unless-stopped'


