---
- name: 'Set a fact for the master node.'
  ansible.builtin.set_fact:
    k8s_master: "{{ node_hostname }}"
  when: 'hostvars[node_hostname].k8s_role == "master" and hostvars[node_hostname].k8s_cluster == k8s_cluster'
  loop: "{{ groups[hostvars[inventory_hostname].k8s_cluster] }}"
  loop_control:
    loop_var: 'node_hostname'

- name: 'Some universal setup.'
  remote_user: 'root'
  block:

    - name: 'Perform normal setup.'
      ansible.builtin.setup:

    - name: 'Label nodes.'
      delegate_to: "{{ k8s_master }}"
      kubernetes.core.k8s:
        definition:
          apiVersion: 'v1'
          kind: 'Node'
          metadata:
            name: "{{ inventory_hostname }}"
            labels:
              "pve_node": "{{ pve_node }}"
              "k8s_cluster": "{{ k8s_cluster }}"
              "k8s_role": "{{ k8s_role }}"
              "k8s_master": "{{ k8s_master }}"
        state: 'present'
        kubeconfig: '~/.kube/config'

- name: 'Set up cluster (but only on master).'
  remote_user: 'root'
  when: 'k8s_role == "master"'
  block:

    - name: 'Execute cluster-specific roles.'
      ansible.builtin.include: "tasks/roles/{{ cluster_role }}.yaml"
      loop: "{{ hostvars[inventory_hostname].k8s_cluster_roles }}"
      loop_control:
        loop_var: 'cluster_role'

    - name: 'Check for existence of cluster-specific task.'
      delegate_to: 'localhost'
      ansible.builtin.stat:
        path: "{{ role_path }}/tasks/clusters/{{ k8s_cluster }}.yaml"
      register: 'cluster_task_path'

    - name: 'Execute cluster-specific task.'
      ansible.builtin.include: "tasks/clusters/{{ k8s_cluster }}.yaml"
      when: 'cluster_task_path.stat.exists'
